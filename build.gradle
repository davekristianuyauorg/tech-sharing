plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.9'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'io.freefair.lombok' version '8.0.1'
	id "com.github.node-gradle.node" version "3.5.1"
}

group = 'com.app.login'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

node {
    download = false
    version = "16.14.0"
    npmVersion = ""
    distBaseUrl = "https://nodejs.org/dist"
    npmInstallCommand = "install"
    
    // The directory where Node.js is unpacked (when download is true) 
    workDir = file("${project.projectDir}/src/main/react/nodejs")
    
    // The directory where npm is installed (when a specific version is defined)
    npmWorkDir = file("${project.projectDir}/src/main/react/npm")
    
    // The Node.js project directory location
    // This is where the package.json file and node_modules directory are located
    // By default it is at the root of the current project
    nodeProjectDir = file("${project.projectDir}/src/main/react")
}

task npmInstallDependcies(type: NpmTask) {
	dependsOn 'npmSetup'
	execOverrides {
		it.ignoreExitValue = true
		it.workingDir = 'src/main/react'
	}
	args = ['install']
}

task npmBuild(type:NpmTask){
	dependsOn 'npmInstallDependcies'
	execOverrides {
		it.workingDir = 'src/main/react'
	}
	args = ['run','build']
}

task copyReactToBuild (type: Copy){
	dependsOn 'npmBuild'
	from "$projectDir/src/main/react/build/"
	into "$buildDir/resource/main/static"
}

processResources {
	dependsOn 'copyReactToBuild'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'org.passay:passay:1.6.3'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
